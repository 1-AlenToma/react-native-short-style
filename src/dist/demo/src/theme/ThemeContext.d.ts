import * as React from "react";
import { IThemeContext, GlobalState, InternalThemeContext as internalThemeContext } from "../Typse";
export declare const ThemeContext: React.Context<IThemeContext>;
export declare const InternalThemeContext: React.Context<internalThemeContext>;
export declare const globalData: {
    hook(...keys: ("window" | "screen" | "activePan" | "panEnabled" | "containerSize" | "storage" | "tStorage" | "appStart" | "alertViewData" | "window.height" | "window.width" | "window.fontScale" | "window.scale" | "window.y" | "window.x" | "window.px" | "window.py" | "screen.height" | "screen.width" | "screen.fontScale" | "screen.scale" | "screen.y" | "screen.x" | "screen.px" | "screen.py" | "containerSize.height" | "containerSize.width" | "containerSize.fontScale" | "containerSize.scale" | "containerSize.y" | "containerSize.x" | "containerSize.px" | "containerSize.py" | "storage.delete" | "storage.get" | "storage.set" | "storage.has" | "storage.clear" | "tStorage.delete" | "tStorage.get" | "tStorage.set" | "tStorage.has" | "tStorage.clear" | "alertViewData.alert" | "alertViewData.confirm" | "alertViewData.toast" | "alertViewData.data" | "alertViewData.toastData" | "alertViewData.data.size" | "alertViewData.data.css" | "alertViewData.data.okText" | "alertViewData.data.message" | "alertViewData.data.title" | "alertViewData.data.yesText" | "alertViewData.data.cancelText" | "alertViewData.data.callBack" | "alertViewData.toastData.position" | "alertViewData.toastData.type" | "alertViewData.toastData.size" | "alertViewData.toastData.css" | "alertViewData.toastData.message" | "alertViewData.toastData.title" | "alertViewData.toastData.icon" | "alertViewData.toastData.loader" | "alertViewData.toastData.loaderCounter" | "alertViewData.toastData.loaderBg")[]): void;
    useEffect(fn: Function, ...keys: ("window" | "screen" | "activePan" | "panEnabled" | "containerSize" | "storage" | "tStorage" | "appStart" | "alertViewData" | "window.height" | "window.width" | "window.fontScale" | "window.scale" | "window.y" | "window.x" | "window.px" | "window.py" | "screen.height" | "screen.width" | "screen.fontScale" | "screen.scale" | "screen.y" | "screen.x" | "screen.px" | "screen.py" | "containerSize.height" | "containerSize.width" | "containerSize.fontScale" | "containerSize.scale" | "containerSize.y" | "containerSize.x" | "containerSize.px" | "containerSize.py" | "storage.delete" | "storage.get" | "storage.set" | "storage.has" | "storage.clear" | "tStorage.delete" | "tStorage.get" | "tStorage.set" | "tStorage.has" | "tStorage.clear" | "alertViewData.alert" | "alertViewData.confirm" | "alertViewData.toast" | "alertViewData.data" | "alertViewData.toastData" | "alertViewData.data.size" | "alertViewData.data.css" | "alertViewData.data.okText" | "alertViewData.data.message" | "alertViewData.data.title" | "alertViewData.data.yesText" | "alertViewData.data.cancelText" | "alertViewData.data.callBack" | "alertViewData.toastData.position" | "alertViewData.toastData.type" | "alertViewData.toastData.size" | "alertViewData.toastData.css" | "alertViewData.toastData.message" | "alertViewData.toastData.title" | "alertViewData.toastData.icon" | "alertViewData.toastData.loader" | "alertViewData.toastData.loaderCounter" | "alertViewData.toastData.loaderBg")[]): void;
    bind(path: string): void;
} & GlobalState;
